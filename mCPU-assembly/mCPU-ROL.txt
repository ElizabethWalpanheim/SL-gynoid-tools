// rotate left

DB val 15
DB half 1023
DB zero 0
DB one 1
DB x 0
DB a 0

//just human interface :)
IN val
HALT zero
OUT x

:begin
IN zero
OUT a
IN x
E2 is_below
:ret
ADD x
E2 over
:ret2
E2 ret3
// if number is positive, recomplete it
E3 ov_norm
:ret3
OUT x
HALT zero
E3 begin

:ov_norm
//add to 2 if last number was below zero
ADD a
E3 ret3

:is_below
// remove sign bit and set the flag
IN zero
SUB x
OUT x
IN one
OUT a
IN x
E3 ret

:over
// second (summator-internal) overflow handler
SUB half
SUB one
OUT x
IN zero
SUB x
SUB a
E3 ret2
